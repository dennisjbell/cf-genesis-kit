meta:
  cc:
    routing_api:
      routing_api:
        enabled: true
      uaa:
        clients:
          cc_routing:
            secret: (( grab meta.uaa.cc_routing_secret ))
  certs:
    routing_api:
      ca:
        cert:     (( vault meta.vault "/routing_api/certs/ca:certificate" ))
      server:
        cert:     (( vault meta.vault "/routing_api/certs/server:certificate" ))
        key:      (( vault meta.vault "/routing_api/certs/server:key" ))
      client:
        cert:     (( vault meta.vault "/routing_api/certs/client:certificate" ))
        key:      (( vault meta.vault "/routing_api/certs/client:key" ))

    
instance_groups:
- name: scheduler 
  jobs:
  - name: cloud_controller_clock
    properties:
      .: (( inject meta.cc.routing_api ))

- name: api
  jobs:
  - name: cloud_controller_ng
    properties:
      .: (( inject meta.cc.routing_api ))
  - name: cloud_controller_worker
    properties:
      .: (( inject meta.cc.routing_api ))

  - name: routing-api
    release: routing
    properties:
      routing_api:
        mtls_ca:          (( grab meta.certs.routing_api.ca.cert ))
        mtls_server_cert: (( grab meta.certs.routing_api.server.cert ))
        mtls_server_key:  (( grab meta.certs.routing_api.server.key ))
        mtls_client_cert: (( grab meta.certs.routing_api.client.cert ))
        mtls_client_key:  (( grab meta.certs.routing_api.client.key ))
        skip_consul_lock: true
        system_domain:    (( grab params.system_domain ))
        sqldb: 
          host:     (( grab params.routingapidb_host ))
          type:     (( grab params.routingapidb_scheme )) 
          port:     (( grab params.routingapidb_port ))
          schema:   (( grab params.routingapidb_name ))
          username: (( grab params.routingapidb_user ))
          password: (( grab params.routingapidb_password ))
        locket:
          api_location: "locket.service.cf.internal:8891"
          ca_cert:      (( grab meta.certs.cf_internal.diego_locket_client.ca_cert ))
          client_cert:  (( grab meta.certs.cf_internal.diego_locket_client.cert ))
          client_key:   (( grab meta.certs.cf_internal.diego_locket_client.key ))
      uaa:
        tls_port: (( grab instance_groups.uaa.jobs.uaa.properties.uaa.ssl.port ))
        ca_cert:  (( grab meta.certs.uaa.ca.cert ))

- name: router
  jobs:
  - name: gorouter
    properties:
      routing_api:
        enabled: true
