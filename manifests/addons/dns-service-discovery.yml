################################################
#
# First we have to tell CAPI and friends about our new internal
# domain, so that internal routes can be mapped to our CF applications.
#
# Because this field is already grabbed from params, we have to merge with
# params instead of overwriting the property in the cloud_controller_ng job
#
params:
  internal_domain: apps.internal
  apps_domains:
    - (( append ))
    - name:     (( grab params.internal_domain ))
      internal: true


instance_groups:
    ################################################
    #
    # Finally, run the cf-networking Service Discovery controller
    # on the diego node  This will be responsible for sourcing
    # mapped routes on the internal domain, and making them available
    # to the cells as an internal BOSH-DNS dns-over-http zone.
    #
- name: diego-cell
  jobs:
  - name: bosh-dns-adapter
    release: cf-networking
    properties:
      internal_domains:
        - (( concat params.internal_domain "." ))
      dnshttps:
        client:
          tls:
            certificate: (( vault meta.vault "/cf_app_sd/certs/client:certificate" ))
            private_key: (( vault meta.vault "/cf_app_sd/certs/client:key" ))
        server:
          ca: (( vault meta.vault "/cf_app_sd/certs/ca:certificate" ))

    # Enable internal routes to be emitted.
    # This is kind of important for internal routing...
    #
  - name: route_emitter
    properties:
      internal_routes:
        enabled: true

    # Add the Service Discovery controller, which provides
    # the dns support for our BOSH-DNS contraption.
    #
  - name: service-discovery-controller
    release: cf-networking
    properties:
      dnshttps:
        client:
          ca: (( vault meta.vault "/cf_app_sd/certs/ca:certificate" ))
        server:
          tls:
            certificate: (( vault meta.vault "/cf_app_sd/certs/server:certificate" ))
            private_key: (( vault meta.vault "/cf_app_sd/certs/server:key" ))
