---
meta:
  router:
    trusted_certs:
      - (( grab meta.certs.diego_instance_identity_ca.ca_cert))
      - (( grab meta.certs.cf_internal.cc_tls.ca_cert ))
      - (( grab meta.certs.uaa.ca.cert ))
      - (( grab meta.certs.network_policy.external.ca_cert))

instance_groups:
  - name: router
    jobs:
      - name: gorouter
        release: routing
        provides:
          gorouter: { as: gorouter, shared: true }
        properties:
          router:
            enable_ssl: true
            tls_pem:
              - cert_chain:  (( grab meta.certs.router.ssl.cert ))
                private_key: (( grab meta.certs.router.ssl.key ))
            ca_certs: (( join "\n" meta.router.trusted_certs ))
            backends:
              cert_chain:  (( grab meta.certs.cf_internal.gorouter_backend_tls.cert ))
              private_key: (( grab meta.certs.cf_internal.gorouter_backend_tls.key ))
            logging_level: (( grab params.log_level ))
            ssl_skip_validation: (( grab params.skip_ssl_validation ))
            status:
              user: health
              password: (( vault meta.vault "/gorouter/status:password" ))
            route_services_secret: (( vault meta.vault "/gorouter/route_services:secret" ))
            tracing:
              enable_zipkin: true
          uaa:
            ca_cert: (( grab meta.certs.uaa.ca.cert ))
            ssl:
              port: (( grab meta.uaa.ssl_port ))
            clients:
              gorouter:
                secret: (( grab meta.uaa.gorouter_secret ))

