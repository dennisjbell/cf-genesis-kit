---
meta:
  cell:
    trusted_cas:
      - (( grab meta.certs.diego_instance_identity_ca.ca_cert ))
      # - ((credhub_tls.ca)) #FIXME - will be added once credhub is added
      - (( grab meta.certs.uaa.ca.cert ))
  diego_rep_client_tls:
    ca_cert:     (( grab meta.certs.cf_internal.diego_rep_client.ca_cert ))
    client_cert: (( grab meta.certs.cf_internal.diego_rep_client.cert ))
    client_key:  (( grab meta.certs.cf_internal.diego_rep_client.key ))
    require_tls: true
  diego_loggregator_client_tls:
    .: (( inject meta.certs.loggregator.agent )) # .ca_cert, .cert & .key
    use_v2_api: true

  cc:
    diego:
      # These are here to ensure that we can augment them if cflinuxfs2
      # (for backwards-compatibility) is enabled.  These are the defaults
      # from the upstream BOSH release, made explicit here.
      #
      lifecycle_bundles:
        buildpack/cflinuxfs3: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
        docker:               docker_app_lifecycle/docker_app_lifecycle.tgz
      droplet_destinations:
        cflinuxfs3: /home/vcap
params:
  trusted_cas: []
  evacuation_timeout: 600

instance_groups:
  - name: diego-cell
    jobs:
    - name: cflinuxfs3-rootfs-setup
      release: cflinuxfs3
      properties:
        cflinuxfs3-rootfs:
          trusted_certs: (( join "\n" meta.cell.trusted_cas params.trusted_cas ))
    - name: garden
      release: garden-runc
      properties:
        garden:
          containerd_mode: true
          default_container_grace_time: 0
          destroy_containers_on_start: true
          cleanup_process_dirs_on_wait: true
          deny_networks:
          - 0.0.0.0/0
        grootfs:
          reserved_space_for_other_jobs_in_mb: (( grab params.grootfs_reserved_space || 15360 ))

    - name: rep
      release: diego
      properties:
        bpm:
          enabled: true
        diego:
          executor:
            instance_identity_ca_cert: (( grab meta.certs.diego_instance_identity_ca.cert )) # this seems weird
            instance_identity_key:     (( grab meta.certs.diego_instance_identity_ca.key ))
          rep:
            evacuation_timeout_in_seconds: (( grab params.evacuation_timeout ))
            listen_addr_admin: ~
            preloaded_rootfses:
              - cflinuxfs3:/var/vcap/packages/cflinuxfs3/rootfs.tar
          ssl:
            skip_cert_verify: (( grab params.skip_ssl_validation ))
        enable_consul_service_registration: false
        enable_declarative_healthcheck: true
        loggregator: (( grab meta.diego_loggregator_client_tls ))
        tls:         (( grab meta.certs.cf_internal.diego_rep_agent_v2 )) # .ca_cert, .cert & .key

    - name: route_emitter
      release: diego
      properties:
        bpm:
          enabled: true
        locks:
          consul:
            enabled: false
        loggregator: (( grab meta.diego_loggregator_client_tls ))
        diego:
          route_emitter:
            healthcheck_address: 127.0.0.1:17012 # to avoid conflict colocating with stager
            bbs: (( grab meta.diego_bbs_client_tls ))
        uaa:
          ca_cert: (( grab meta.certs.uaa.ca.cert ))
          client_secret: (( grab meta.uaa.tcp_emitter_secret ))

    - name: garden-cni
      release: cf-networking

    - name: netmon
      release: silk

    - name: vxlan-policy-agent
      release: silk
      properties:
          ca_cert:     (( grab meta.certs.network_policy.client.ca_cert ))
          client_cert: (( grab meta.certs.network_policy.client.cert ))
          client_key:  (( grab meta.certs.network_policy.client.key ))

    - name: silk-daemon
      release: silk
      properties:
        ca_cert:     (( grab meta.certs.silk.daemon.ca_cert ))
        client_cert: (( grab meta.certs.silk.daemon.cert ))
        client_key:  (( grab meta.certs.silk.daemon.key ))
    - name: silk-cni
      release: silk
    - name: containerd
      release: garden-runc


    - name: auctioneer
      release: diego
      properties:
        enable_consul_service_registration: false
        diego:
          auctioneer:
            skip_consul_lock: true
            ca_cert:     (( grab meta.certs.cf_internal.diego_auctioneer_server.ca_cert ))
            server_cert: (( grab meta.certs.cf_internal.diego_auctioneer_server.cert ))
            server_key:  (( grab meta.certs.cf_internal.diego_auctioneer_server.key ))
            bbs:         (( grab meta.diego_bbs_client_tls ))
            rep:         (( grab meta.diego_rep_client_tls ))
        loggregator: (( grab meta.diego_loggregator_client_tls ))

    - name: tps
      release: capi
      properties:
        capi:
          tps:
            bbs: (( grab meta.diego_bbs_client_tls ))
            cc:  (( grab meta.certs.cf_internal.cc_bridge_tps ))
            watcher:
              skip_consul_lock: true
              locket:
                api_location: "locket.service.cf.internal:8891"

    - name: cc_uploader
      release: capi
      properties:
        capi:
          cc_uploader:
            cc:         (( grab meta.certs.cf_internal.cc_bridge_cc_uploader ))
            mutual_tls: (( grab meta.certs.cf_internal.cc_bridge_cc_uploader_server ))


    - name: scheduler
      release: cf-syslog-drain
      properties:
        scalablesyslog:
          scheduler:
            api:
              url: https://cloud-controller-ng.service.cf.internal:9023
            tls:
              api:
                cn:         "cloud-controller-ng.service.cf.internal"
                .:          (( inject meta.certs.cf_internal.scheduler_api_tls )) # .ca, .cert & .key
              client:
                adapter_cn: "ss-adapter"
                .:          (( inject meta.certs.loggregator.scheduler_client_tls )) # .ca, .cert & .key
